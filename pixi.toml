[workspace]
name = "readii_2_roqc"
authors = ["Katy Scott <bhklab.katyscott@gmail.com>"]
description = "Radiomic Extraction and Analysis for DICOM Images to Refine Objective Quality Control "
license = "MIT"
channels = ["conda-forge", "bioconda"]
platforms = ["osx-arm64", "linux-64", "win-64", "osx-64"]

[environments]
quality = { features = ["quality"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }

[activation]
# convenient variables which can be used in scripts
env.CONFIG = "${PIXI_PROJECT_ROOT}/config"
env.METADATA = "${PIXI_PROJECT_ROOT}/metadata"
env.LOGS = "${PIXI_PROJECT_ROOT}/logs"
env.RAWDATA = "${PIXI_PROJECT_ROOT}/data/rawdata"
env.PROCDATA = "${PIXI_PROJECT_ROOT}/data/procdata"
env.RESULTS = "${PIXI_PROJECT_ROOT}/data/results"
env.SCRIPTS = "${PIXI_PROJECT_ROOT}/workflow/scripts"

[dependencies]
python = ">=3.12,<3.13"
pip = "*"
ipython = "*"
ipykernel = "*"
jupyterlab = "*"
ipywidgets = ">=8.1.7,<9"
# numpy = ">=2.2.5,<3"
# scikit-learn = ">=1.6.1,<2"
# scikit-survival = ">=0.24.1,<0.25"
# openpyxl = ">=3.1.5,<4"
# snakemake = ">=9.4.0,<10"
# click = ">=8.2.1,<9"
pyvista = ">=0.46.1,<0.47"
trame = ">=3.11.0,<4"
trame-vuetify = ">=3.0.2,<4"
trame-vtk = ">=2.9.1,<3"

[pypi-dependencies]
readii_2_roqc = { path = ".", editable = true }
# readii = ">=1.36.1, <2"
# damply = ">=0.10.0, <0.11"


[tasks]

[tasks.mit]
args = ["dataset", "modalities", "strategy", "rmap", {arg = "existing_file_mode", default = "skip"}]
cmd = ["imgtools",
       "autopipeline",
       "$RAWDATA/TCIA_{{ dataset }}/images",
       "$PROCDATA/TCIA_{{ dataset }}/images/mit_{{ dataset }}",
       "--modalities", "{{ modalities }}",
       "--roi-strategy", "{{ strategy }}",
       "-rmap", "{{ rmap }}",
       "--filename-format",
       "'{PatientID}_{SampleNumber}/{Modality}_{SeriesInstanceUID}/{ImageID}.nii.gz'",
       "--update-crawl",
       "--existing-file-mode",
       "{{ existing_file_mode }}"
] 

[tasks.readii_negative]
args = ["dataset",
         {arg = "overwrite", default = "false"},
         {arg = "seed", default = "10"}
]
cwd = "src/readii_2_roqc/readii"
cmd = ["python",
       "make_negative_controls.py",
       "{{ dataset }}",
       "--overwrite", "{{ overwrite }}",
       "--seed", "{{ seed }}"
]

[tasks.index]
args = ["dataset", "method", {arg = "overwrite", default = "false"}]
cwd = "src/readii_2_roqc/feature_extraction"
cmd = ["python",
       "index.py",
       "{{ dataset }}",
       "{{ method }}",
       "--overwrite", "{{ overwrite }}"
]

[tasks.extract]
args = ["dataset", 
        "method", 
        "settings",
        {arg = "overwrite", default = "False"},
        {arg = "parallel", default = "False"}]
depends-on = [{ "task" = "index", "args" = ["{{ dataset }}", "{{ method }}"] }]
cwd = "src/readii_2_roqc/feature_extraction"
cmd = ["python",
       "extract.py",
       "{{ dataset }}",
       "{{ method }}",
       "{{ settings }}",
       "--overwrite", "{{ overwrite }}",
       "--parallel", "{{ parallel }}"
]

[tasks.predict]
args = ["dataset", 
        "features", 
        "signature",
        {arg = "bootstrap", default = '1000'},
        {arg = "split", default = 'NONE'}]
cwd = "src/readii_2_roqc/analysis"
cmd = ["python",
       "predict.py",
       "--dataset", "{{ dataset }}",
       "--features", "{{ features }}",
       "--signature", "{{ signature }}",
       "--bootstrap", "{{ bootstrap }}",
       "--split", "{{ split }}"
       ]

[tasks.plot_predict]
args = ["dataset", 
        "signature",
        {arg = "overwrite", default = "false"}]
cwd = "src/readii_2_roqc/visualization"
cmd = ["python",
       "plot_prediction.py",
       "{{ dataset }}",
       "{{ signature }}",
       "--overwrite", "{{ overwrite }}"
       ]

############################################## QUALITY ###############################################
# Quality includes linting, type checking, and formatting
[feature.quality.dependencies]
ruff = "*"

[feature.quality.tasks]
ruff-check.cmd = ["ruff", "check"]
ruff-check.inputs = ["config/ruff.toml", "workflow"]
ruff-check.description = "Run ruff check"
ruff-format.cmd = ["ruff", "format"]
ruff-format.inputs = ["config/ruff.toml", "workflow"]
ruff-format.depends-on = ["ruff-check"]
ruff-format.description = "Run ruff format, run check first"
qc.depends-on = ["ruff-format", "ruff-check"]
qc.description = "Quality check: ruff check and format"

############################################## DOCS ################################################
[feature.docs.dependencies]
mkdocs = "*"
mkdocs-include-markdown-plugin = ">=7.0.0,<8"
mkdocs-material = ">=9.6.12,<10"

[feature.docs.tasks.doc-build]
cmd = "mkdocs build -f mkdocs.yaml"
description = "Build documentation with mkdocs"

[feature.docs.tasks.doc-serve]
cmd = "mkdocs serve -f mkdocs.yaml"
depends-on = ["doc-build"]
description = "Serve documentation with mkdocs, runs doc-build first"
