{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"READII-2-ROQC Author: Katy Scott Contact: bhklab.katyscott@gmail.com GitHub: strixy16 Radiomic Extraction and Analysis for DICOM Images to Refine Objective Quality Control Set Up Prerequisites Pixi is required to run this project. If you haven't installed it yet, follow these instructions Installation Clone this repository to your local machine Navigate to the project directory Set up the environment using Pixi: pixi install Documentation Click here to view the full documentation.","title":"Home"},{"location":"#readii-2-roqc","text":"Author: Katy Scott Contact: bhklab.katyscott@gmail.com GitHub: strixy16 Radiomic Extraction and Analysis for DICOM Images to Refine Objective Quality Control","title":"READII-2-ROQC"},{"location":"#set-up","text":"","title":"Set Up"},{"location":"#prerequisites","text":"Pixi is required to run this project. If you haven't installed it yet, follow these instructions","title":"Prerequisites"},{"location":"#installation","text":"Clone this repository to your local machine Navigate to the project directory Set up the environment using Pixi: pixi install","title":"Installation"},{"location":"#documentation","text":"Click here to view the full documentation.","title":"Documentation"},{"location":"data_sources/","text":"Data Sources This section documents all data sources used in READII-2-ROQC. External Data Sources CC-Radiomics-Phantom Name : Credence Cartridge Radiomics Phantom CT Scans Version/Date : Version 1: Updated 2017/07/28 URL : https://www.cancerimagingarchive.net/collection/cc-radiomics-phantom/ Access Method : NBIA Data Retriever Access Date : 2025-04-22 Data Format : DICOM Citation : Mackin, D., Ray, X., Zhang, L., Fried, D., Yang, J., Taylor, B., Rodriguez-Rivera, E., Dodge, C., Jones, A., & Court, L. (2017). Data From Credence Cartridge Radiomics Phantom CT Scans (CC-Radiomics-Phantom) [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/K9/TCIA.2017.zuzrml5b License : CC BY 3.0 Data Types : Images: CT, RTSTRUCT Sample Size : 17 subjects NSCLC-Radiomics Name : NSCLC-Radiomics (or Lung1) Version/Date : Version 4: Updated 2020/10/22 URL : https://www.cancerimagingarchive.net/collection/nsclc-radiomics/ Access Method : NBIA Data Retriever Access Date : 2025-04-23 Data Format : DICOM Citation : Aerts, H. J. W. L., Wee, L., Rios Velazquez, E., Leijenaar, R. T. H., Parmar, C., Grossmann, P., Carvalho, S., Bussink, J., Monshouwer, R., Haibe-Kains, B., Rietveld, D., Hoebers, F., Rietbergen, M. M., Leemans, C. R., Dekker, A., Quackenbush, J., Gillies, R. J., Lambin, P. (2014). Data From NSCLC-Radiomics (version 4) [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/K9/TCIA.2015.PF0M9REI License : CC BY-NC 3.0 Data Types : Images: CT, RTSTRUCT Clinical: CSV Sample Size : 422 subjects ROI Name : Tumour = GTV-1, gtv-pre-op Notes : LUNG-128 does not have a GTV segmentation, so only 421 patients are processed. HEAD-NECK-RADIOMICS-HN1 Name : HEAD-NECK-RADIOMICS-HN1 (or H&N1) Version/Date : Version 3: Updated 2020/07/29 URL : https://www.cancerimagingarchive.net/collection/head-neck-radiomics-hn1/ Access Method : NBIA Data Retriever Access Date : 2025-04-23 Data Format : DICOM Citation : Wee, L., & Dekker, A. (2019). Data from HEAD-NECK-RADIOMICS-HN1 [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/tcia.2019.8kap372n License : Images: TCIA No Commercial Limited Clinical: CC BY-NC 3.0 Data Types : Images: CT, RTSTRUCT Clinical: CSV Sample Size : 137 subjects ROI Name : Tumour = GTV-1 RADCURE Name : RADCURE Version/Date : Clinical: Version 4: Updated 2024/12/19 / Images: Version 3: Updated 2024/03/27 URL : https://www.cancerimagingarchive.net/collection/radcure/ Access Method : NBIA Data Retriever Access Date : 2024-05-23 Data Format : DICOM Citation : Welch, M. L., Kim, S., Hope, A., Huang, S. H., Lu, Z., Marsilla, J., Kazmierski, M., Rey-McIntyre, K., Patel, T., O\u2019Sullivan, B., Waldron, J., Kwan, J., Su, J., Soltan Ghoraie, L., Chan, H. B., Yip, K., Giuliani, M., Princess Margaret Head And Neck Site Group, Bratman, S., \u2026 Tadic, T. (2023). Computed Tomography Images from Large Head and Neck Cohort (RADCURE) (Version 4) [Dataset]. The Cancer Imaging Archive. https://doi.org/10.7937/J47W-NM11 License : Images: TCIA Restricted Clinical: CC BY-NC 4.0 Data Types : Images: CT, RTSTRUCT Clinical: CSV Sample Size : 3,346 subjects ROI Name : Tumour = GTVp$ (regex to just get first primary tumour) NSCLC-Radiogenomics Name : NSCLC Radiogenomics Version/Date : Version 4: Updated 2021/06/01 URL : https://www.cancerimagingarchive.net/collection/nsclc-radiogenomics/ Access Method : NBIA Data Retriever Access Date : 2025-05-22 Data Format : DICOM Citation : Bakr, S., Gevaert, O., Echegaray, S., Ayers, K., Zhou, M., Shafiq, M., Zheng, H., Zhang, W., Leung, A., Kadoch, M., Shrager, J., Quon, A., Rubin, D., Plevritis, S., & Napel, S. (2017). Data for NSCLC Radiogenomics (Version 4) [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/K9/TCIA.2017.7hs46erv License : CC BY-NC 3.0 Data Types : Images: CT, SEG Clinical: CSV Sample Size : 211 subjects ROI Name : Tumour = '.*' (regex to just get first primary tumour) Internal/Generated Data --","title":"Data Sources"},{"location":"data_sources/#data-sources","text":"This section documents all data sources used in READII-2-ROQC.","title":"Data Sources"},{"location":"data_sources/#external-data-sources","text":"","title":"External Data Sources"},{"location":"data_sources/#cc-radiomics-phantom","text":"Name : Credence Cartridge Radiomics Phantom CT Scans Version/Date : Version 1: Updated 2017/07/28 URL : https://www.cancerimagingarchive.net/collection/cc-radiomics-phantom/ Access Method : NBIA Data Retriever Access Date : 2025-04-22 Data Format : DICOM Citation : Mackin, D., Ray, X., Zhang, L., Fried, D., Yang, J., Taylor, B., Rodriguez-Rivera, E., Dodge, C., Jones, A., & Court, L. (2017). Data From Credence Cartridge Radiomics Phantom CT Scans (CC-Radiomics-Phantom) [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/K9/TCIA.2017.zuzrml5b License : CC BY 3.0 Data Types : Images: CT, RTSTRUCT Sample Size : 17 subjects","title":"CC-Radiomics-Phantom"},{"location":"data_sources/#nsclc-radiomics","text":"Name : NSCLC-Radiomics (or Lung1) Version/Date : Version 4: Updated 2020/10/22 URL : https://www.cancerimagingarchive.net/collection/nsclc-radiomics/ Access Method : NBIA Data Retriever Access Date : 2025-04-23 Data Format : DICOM Citation : Aerts, H. J. W. L., Wee, L., Rios Velazquez, E., Leijenaar, R. T. H., Parmar, C., Grossmann, P., Carvalho, S., Bussink, J., Monshouwer, R., Haibe-Kains, B., Rietveld, D., Hoebers, F., Rietbergen, M. M., Leemans, C. R., Dekker, A., Quackenbush, J., Gillies, R. J., Lambin, P. (2014). Data From NSCLC-Radiomics (version 4) [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/K9/TCIA.2015.PF0M9REI License : CC BY-NC 3.0 Data Types : Images: CT, RTSTRUCT Clinical: CSV Sample Size : 422 subjects ROI Name : Tumour = GTV-1, gtv-pre-op Notes : LUNG-128 does not have a GTV segmentation, so only 421 patients are processed.","title":"NSCLC-Radiomics"},{"location":"data_sources/#head-neck-radiomics-hn1","text":"Name : HEAD-NECK-RADIOMICS-HN1 (or H&N1) Version/Date : Version 3: Updated 2020/07/29 URL : https://www.cancerimagingarchive.net/collection/head-neck-radiomics-hn1/ Access Method : NBIA Data Retriever Access Date : 2025-04-23 Data Format : DICOM Citation : Wee, L., & Dekker, A. (2019). Data from HEAD-NECK-RADIOMICS-HN1 [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/tcia.2019.8kap372n License : Images: TCIA No Commercial Limited Clinical: CC BY-NC 3.0 Data Types : Images: CT, RTSTRUCT Clinical: CSV Sample Size : 137 subjects ROI Name : Tumour = GTV-1","title":"HEAD-NECK-RADIOMICS-HN1"},{"location":"data_sources/#radcure","text":"Name : RADCURE Version/Date : Clinical: Version 4: Updated 2024/12/19 / Images: Version 3: Updated 2024/03/27 URL : https://www.cancerimagingarchive.net/collection/radcure/ Access Method : NBIA Data Retriever Access Date : 2024-05-23 Data Format : DICOM Citation : Welch, M. L., Kim, S., Hope, A., Huang, S. H., Lu, Z., Marsilla, J., Kazmierski, M., Rey-McIntyre, K., Patel, T., O\u2019Sullivan, B., Waldron, J., Kwan, J., Su, J., Soltan Ghoraie, L., Chan, H. B., Yip, K., Giuliani, M., Princess Margaret Head And Neck Site Group, Bratman, S., \u2026 Tadic, T. (2023). Computed Tomography Images from Large Head and Neck Cohort (RADCURE) (Version 4) [Dataset]. The Cancer Imaging Archive. https://doi.org/10.7937/J47W-NM11 License : Images: TCIA Restricted Clinical: CC BY-NC 4.0 Data Types : Images: CT, RTSTRUCT Clinical: CSV Sample Size : 3,346 subjects ROI Name : Tumour = GTVp$ (regex to just get first primary tumour)","title":"RADCURE"},{"location":"data_sources/#nsclc-radiogenomics","text":"Name : NSCLC Radiogenomics Version/Date : Version 4: Updated 2021/06/01 URL : https://www.cancerimagingarchive.net/collection/nsclc-radiogenomics/ Access Method : NBIA Data Retriever Access Date : 2025-05-22 Data Format : DICOM Citation : Bakr, S., Gevaert, O., Echegaray, S., Ayers, K., Zhou, M., Shafiq, M., Zheng, H., Zhang, W., Leung, A., Kadoch, M., Shrager, J., Quon, A., Rubin, D., Plevritis, S., & Napel, S. (2017). Data for NSCLC Radiogenomics (Version 4) [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/K9/TCIA.2017.7hs46erv License : CC BY-NC 3.0 Data Types : Images: CT, SEG Clinical: CSV Sample Size : 211 subjects ROI Name : Tumour = '.*' (regex to just get first primary tumour)","title":"NSCLC-Radiogenomics"},{"location":"data_sources/#internalgenerated-data","text":"--","title":"Internal/Generated Data"},{"location":"usage/","text":"Usage Guide Project Configuration config should have three subdirectories: datasets/ , extraction/ , and signatures/ datasets Each dataset needs a configuration file with the following settings filled in DATA_SOURCE: \"\" # where the data came from, will be used for data organization DATASET_NAME: \"\" # the name of the dataset , will be use for data organization ### CLINICAL VARIABLE INFORMATION ### CLINICAL: FILE: \"\" # Name of the clinical data file associated with the data. Not a full path, just the name including the file suffix. OUTCOME_VARIABLES: time_label: \"\" # Column name for survival time in the `FILE`, should be a numeric type event_label: \"\" # Column name for survival event in the `FILE`, can be numeric, string, or bool convert_to_years: False # Boolean, whether the `time_label` needs to be converted from days to years event_value_mapping: {} # Customize the `event_label` bool or string mapping to numeric type. Should be in the order {0: Alive_value, 1: Dead_value} EXCLUSION_VARIABLES: {} # Column values of rows to drop in the clinical data (Ex. `{column_name: [val1, val2]}` ) ### MED-IMAGETOOLS settings MIT: MODALITIES: # Modalities to process with autopipeline image: CT mask: RTSTRUCT ROI_STRATEGY: MERGE # How to handle multiple ROI matches ROI_MATCH_MAP: # Matching map for ROIs in dataset (use if you only want to process some of the masks in a segmentation) KEY:ROI_NAME # NOTE: there can be no spaces in KEY:ROI_NAME ### READII settings READII: IMAGE_TYPES: # Selection of image types to generate and perform feature extraction on (negative control settings) regions: # Areas of image to apply permutation to - \"full\" permutations: # Permutation type to apply to region - \"original\" crop: # How to crop the image prior to feature extraction TRAIN_TEST_SPLIT: # If using data for modelling, set up method of data splitting here split: False # Whether to split the data split_variable: {} # What variable from `CLINICAL.FILE` to use to split the data and values to group by (Ex. {'split_var': ['training', 'test']}) impute: null # What to impute values in `split_variable` with. Should be one of the values provided in `split_variable`. If none provided, won't impute, samples with no split value will be dropped. RANDOM_SEED: 10 # Seed for reproducibility of analysis. extraction This directory should store any configuration settings used for feature extraction. They should be named/organized by the feature extraction method. Example: pyradiomics_original_all_features.yaml Different configuration set-ups can be documented here. PyRadiomics PyRadiomics feature extraction settings yaml files should be kept here. See the PyRadiomics 'Parameter File' documentation for details about this file. signatures Files in this directory should list selected features in a radiomic signature and the corresponding weights from a fitted prediction model. PyRadiomics CoxPH signature signature: 'original_firstorder_Energy': 1.74e-11 'original_shape_Compactness1': -1.65e+01 'original_glrlm_GrayLevelNonUniformity': 4.95e-05 'wavelet-HLH_glrlm_GrayLevelNonUniformity': 2.81e-06 Data Setup All data should be stored in a Data directory separate from this project directory. Within the project repo, there's a data directory containing rawdata , procdata , and results directories. The rawdata and procdata directories should by symbolic links pointing to the corresponding data directory in your separate Data directory. Aliasing rawdata and procdata To set up the symbolic links for the rawdata and procdata directories, run the following commands, starting from your project directory: ln -s /path/to/separate/data/dir/rawdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } data/rawdata/ { DATASET_SOURCE } _ { DATASET_NAME } ln -s /path/to/separate/data/dir/procdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } data/procdata/ { DATASET_SOURCE } _ { DATASET_NAME } Note You will need to perform this step for each dataset you wish to process with the READII-2-ROQC pipeline. Documenting datasets When a new dataset has been added to the rawdata directory, you MUST document it on the Data Sources page. Copy the following template and fill it in accordingly for each dataset. If anything about the dataset changes, make sure to keep this page up to date. Data Source Template NSCLC-Radiomics - **Name** : NSCLC-Radiomics (or Lung1) - **Version/Date** : Version 4: Updated 2020/10/22 - **URL** : <https://www.cancerimagingarchive.net/collection/nsclc-radiomics/> - **Access Method** : NBIA Data Retriever - **Access Date** : 2025-04-23 - **Data Format** : DICOM - **Citation** : Aerts, H. J. W. L., Wee, L., Rios Velazquez, E., Leijenaar, R. T. H., Parmar, C., Grossmann, P., Carvalho, S., Bussink, J., Monshouwer, R., Haibe-Kains, B., Rietveld, D., Hoebers, F., Rietbergen, M. M., Leemans, C. R., Dekker, A., Quackenbush, J., Gillies, R. J., Lambin, P. (2014). Data From NSCLC-Radiomics (version 4) [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/K9/TCIA.2015.PF0M9REI - **License** : [ CC BY-NC 3.0 ]( https://creativecommons.org/licenses/by-nc/3.0/ ) - **Data Types** : - Images: CT, RTSTRUCT - Clinical: CSV - **Sample Size** : 422 subjects - **ROI Name** : Tumour = GTV-1 - **Notes** : LUNG-128 does not have a GTV segmentation, so only 421 patients are processed. Project data Directory Tree data | -- procdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/procdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- correlations | | ` -- { extraction_method } | | ` -- { extraction_configuration_file_name } | | | -- { image_type } _ { correlation_method } _matrix.csv | | ` -- { image_type } _v_ { image_type } _ { correlation_method } _matrix.csv | | -- features | | ` -- { extraction_method } | | | -- extraction_method_index.csv | | ` -- { extraction_configuration_file_name } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ROI_name } | | | -- original_full_features.csv | | | -- { permutation } _ { region } _features.csv | | ` -- { permutation } _ { region } _features.csv | | -- images | | | -- mit_ { DATASET_NAME } | | | ` -- { PatientID } _ { SampleNumber } | | | | -- { ImageModality } _ { SeriesInstanceUID } | | | | ` -- { ImageModality } .nii.gz | | | ` -- { SegmentationModality } _ { SeriesInstanceUID } | | | ` -- { ROI_name } .nii.gz | | ` -- readii_ { DATASET_NAME } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ImageModality } _ { SeriesInstanceUID } | | | -- { permutation } _ { region } .nii.gz | | ` -- { permutation } _ { region } .nii.gz | ` -- signatures | ` -- { signature_name } | | -- full_original_signature_features.csv | ` -- { permutation } _ { region } _signature_features.csv | -- rawdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/srcdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- clinical | | ` -- { Clinical Data File } .csv OR { Clinical Data File } .xlsx | ` -- images | ` -- { DATASET_NAME } | | -- { Sample1 DICOM directory } | | -- { Sample2 DICOM directory } | | -- ... | ` -- { SampleN DICOM directory } ` -- results ` -- { DATASET_SOURCE } _ { DATASET_NAME } | -- correlation | ` -- { extraction_method } | | -- { extraction_configuration_file_name } | ` -- { signature_name } | -- features | ` -- { extraction_method } | ` -- { extraction_configuration_file_name } ` -- prediction ` -- { signature_name } | -- prediction_metrics.csv ` -- hazards_ { bootstrap_count } | -- original_full_features.csv | -- { permutation } _ { region } _features.csv ` -- { permutation } _ { region } _features.csv Best Practices Store raw data in data/rawdata/ and never modify it Store processed data in data/procdata/ and all code used to generate it should be in workflow/scripts/ Track data provenance (where data came from and how it was modified) Respect data usage agreements and licenses! This is especially important for data that should not be shared publicly Running Your Analysis The pipeline is currently being run via pixi tasks. The following example shows how to run the pipeline using the NSCLC-Radiomics data. DICOM Image and Mask file processing with Med-ImageTools This step converts the DICOM image files to NIfTI files, creates a unique ID for Image and Mask pairs, and generates an index file containing relevant metadata. Step 1: Run Med-ImageTools This step converts the DICOM files to NIfTIs, assigns unique SampleIDs to image and mask pairs, and generates an index table for each file with associated metadata (e.g. DICOM tags) pixi run mit NSCLC-Radiomics 'CT,RTSTRUCT' SEPARATE 'GTV:GTV-1,gtv-pre-op' Step 2: Generate negative control images with READII This step creates and saves READII negative controls specified in the config file for the provided dataset. pixi run readii_negative NSCLC-Radiomics Step 3: Run feature extraction This step first generates an index file for the specific feature extraction method, where each row contains the information for the image and mask pair to use. pixi run extract NSCLC-Radiomics pyradiomics pyradiomics_original_all_features.yaml Data splitting aerts_original Train: NSCLC-Radiomics Validation: HN1, RADCURE-test aerts_RADCURE_refit Train: RADCURE-train Validation: HN1, RADCURE-test r2r_NSCLC Train: NSCLC-Radiomics Validation: HN1, RADCURE-test r2r_RADCURE Train: RADCURE-train Validation: HN1, RADCURE-test Survival Modelling Resources https://scikit-survival.readthedocs.io/en/stable/user_guide/evaluating-survival-models.html# Harrell's C-index: https://scikit-survival.readthedocs.io/en/stable/api/generated/sksurv.metrics.concordance_index_censored.html","title":"Usage"},{"location":"usage/#usage-guide","text":"","title":"Usage Guide"},{"location":"usage/#project-configuration","text":"config should have three subdirectories: datasets/ , extraction/ , and signatures/","title":"Project Configuration"},{"location":"usage/#datasets","text":"Each dataset needs a configuration file with the following settings filled in DATA_SOURCE: \"\" # where the data came from, will be used for data organization DATASET_NAME: \"\" # the name of the dataset , will be use for data organization ### CLINICAL VARIABLE INFORMATION ### CLINICAL: FILE: \"\" # Name of the clinical data file associated with the data. Not a full path, just the name including the file suffix. OUTCOME_VARIABLES: time_label: \"\" # Column name for survival time in the `FILE`, should be a numeric type event_label: \"\" # Column name for survival event in the `FILE`, can be numeric, string, or bool convert_to_years: False # Boolean, whether the `time_label` needs to be converted from days to years event_value_mapping: {} # Customize the `event_label` bool or string mapping to numeric type. Should be in the order {0: Alive_value, 1: Dead_value} EXCLUSION_VARIABLES: {} # Column values of rows to drop in the clinical data (Ex. `{column_name: [val1, val2]}` ) ### MED-IMAGETOOLS settings MIT: MODALITIES: # Modalities to process with autopipeline image: CT mask: RTSTRUCT ROI_STRATEGY: MERGE # How to handle multiple ROI matches ROI_MATCH_MAP: # Matching map for ROIs in dataset (use if you only want to process some of the masks in a segmentation) KEY:ROI_NAME # NOTE: there can be no spaces in KEY:ROI_NAME ### READII settings READII: IMAGE_TYPES: # Selection of image types to generate and perform feature extraction on (negative control settings) regions: # Areas of image to apply permutation to - \"full\" permutations: # Permutation type to apply to region - \"original\" crop: # How to crop the image prior to feature extraction TRAIN_TEST_SPLIT: # If using data for modelling, set up method of data splitting here split: False # Whether to split the data split_variable: {} # What variable from `CLINICAL.FILE` to use to split the data and values to group by (Ex. {'split_var': ['training', 'test']}) impute: null # What to impute values in `split_variable` with. Should be one of the values provided in `split_variable`. If none provided, won't impute, samples with no split value will be dropped. RANDOM_SEED: 10 # Seed for reproducibility of analysis.","title":"datasets"},{"location":"usage/#extraction","text":"This directory should store any configuration settings used for feature extraction. They should be named/organized by the feature extraction method. Example: pyradiomics_original_all_features.yaml Different configuration set-ups can be documented here.","title":"extraction"},{"location":"usage/#pyradiomics","text":"PyRadiomics feature extraction settings yaml files should be kept here. See the PyRadiomics 'Parameter File' documentation for details about this file.","title":"PyRadiomics"},{"location":"usage/#signatures","text":"Files in this directory should list selected features in a radiomic signature and the corresponding weights from a fitted prediction model. PyRadiomics CoxPH signature signature: 'original_firstorder_Energy': 1.74e-11 'original_shape_Compactness1': -1.65e+01 'original_glrlm_GrayLevelNonUniformity': 4.95e-05 'wavelet-HLH_glrlm_GrayLevelNonUniformity': 2.81e-06","title":"signatures"},{"location":"usage/#data-setup","text":"All data should be stored in a Data directory separate from this project directory. Within the project repo, there's a data directory containing rawdata , procdata , and results directories. The rawdata and procdata directories should by symbolic links pointing to the corresponding data directory in your separate Data directory.","title":"Data Setup"},{"location":"usage/#aliasing-rawdata-and-procdata","text":"To set up the symbolic links for the rawdata and procdata directories, run the following commands, starting from your project directory: ln -s /path/to/separate/data/dir/rawdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } data/rawdata/ { DATASET_SOURCE } _ { DATASET_NAME } ln -s /path/to/separate/data/dir/procdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } data/procdata/ { DATASET_SOURCE } _ { DATASET_NAME } Note You will need to perform this step for each dataset you wish to process with the READII-2-ROQC pipeline.","title":"Aliasing rawdata and procdata"},{"location":"usage/#documenting-datasets","text":"When a new dataset has been added to the rawdata directory, you MUST document it on the Data Sources page. Copy the following template and fill it in accordingly for each dataset. If anything about the dataset changes, make sure to keep this page up to date. Data Source Template NSCLC-Radiomics - **Name** : NSCLC-Radiomics (or Lung1) - **Version/Date** : Version 4: Updated 2020/10/22 - **URL** : <https://www.cancerimagingarchive.net/collection/nsclc-radiomics/> - **Access Method** : NBIA Data Retriever - **Access Date** : 2025-04-23 - **Data Format** : DICOM - **Citation** : Aerts, H. J. W. L., Wee, L., Rios Velazquez, E., Leijenaar, R. T. H., Parmar, C., Grossmann, P., Carvalho, S., Bussink, J., Monshouwer, R., Haibe-Kains, B., Rietveld, D., Hoebers, F., Rietbergen, M. M., Leemans, C. R., Dekker, A., Quackenbush, J., Gillies, R. J., Lambin, P. (2014). Data From NSCLC-Radiomics (version 4) [Data set]. The Cancer Imaging Archive. https://doi.org/10.7937/K9/TCIA.2015.PF0M9REI - **License** : [ CC BY-NC 3.0 ]( https://creativecommons.org/licenses/by-nc/3.0/ ) - **Data Types** : - Images: CT, RTSTRUCT - Clinical: CSV - **Sample Size** : 422 subjects - **ROI Name** : Tumour = GTV-1 - **Notes** : LUNG-128 does not have a GTV segmentation, so only 421 patients are processed.","title":"Documenting datasets"},{"location":"usage/#project-data-directory-tree","text":"data | -- procdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/procdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- correlations | | ` -- { extraction_method } | | ` -- { extraction_configuration_file_name } | | | -- { image_type } _ { correlation_method } _matrix.csv | | ` -- { image_type } _v_ { image_type } _ { correlation_method } _matrix.csv | | -- features | | ` -- { extraction_method } | | | -- extraction_method_index.csv | | ` -- { extraction_configuration_file_name } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ROI_name } | | | -- original_full_features.csv | | | -- { permutation } _ { region } _features.csv | | ` -- { permutation } _ { region } _features.csv | | -- images | | | -- mit_ { DATASET_NAME } | | | ` -- { PatientID } _ { SampleNumber } | | | | -- { ImageModality } _ { SeriesInstanceUID } | | | | ` -- { ImageModality } .nii.gz | | | ` -- { SegmentationModality } _ { SeriesInstanceUID } | | | ` -- { ROI_name } .nii.gz | | ` -- readii_ { DATASET_NAME } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ImageModality } _ { SeriesInstanceUID } | | | -- { permutation } _ { region } .nii.gz | | ` -- { permutation } _ { region } .nii.gz | ` -- signatures | ` -- { signature_name } | | -- full_original_signature_features.csv | ` -- { permutation } _ { region } _signature_features.csv | -- rawdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/srcdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- clinical | | ` -- { Clinical Data File } .csv OR { Clinical Data File } .xlsx | ` -- images | ` -- { DATASET_NAME } | | -- { Sample1 DICOM directory } | | -- { Sample2 DICOM directory } | | -- ... | ` -- { SampleN DICOM directory } ` -- results ` -- { DATASET_SOURCE } _ { DATASET_NAME } | -- correlation | ` -- { extraction_method } | | -- { extraction_configuration_file_name } | ` -- { signature_name } | -- features | ` -- { extraction_method } | ` -- { extraction_configuration_file_name } ` -- prediction ` -- { signature_name } | -- prediction_metrics.csv ` -- hazards_ { bootstrap_count } | -- original_full_features.csv | -- { permutation } _ { region } _features.csv ` -- { permutation } _ { region } _features.csv","title":"Project data Directory Tree"},{"location":"usage/#best-practices","text":"Store raw data in data/rawdata/ and never modify it Store processed data in data/procdata/ and all code used to generate it should be in workflow/scripts/ Track data provenance (where data came from and how it was modified) Respect data usage agreements and licenses! This is especially important for data that should not be shared publicly","title":"Best Practices"},{"location":"usage/#running-your-analysis","text":"The pipeline is currently being run via pixi tasks. The following example shows how to run the pipeline using the NSCLC-Radiomics data.","title":"Running Your Analysis"},{"location":"usage/#dicom-image-and-mask-file-processing-with-med-imagetools","text":"This step converts the DICOM image files to NIfTI files, creates a unique ID for Image and Mask pairs, and generates an index file containing relevant metadata.","title":"DICOM Image and Mask file processing with Med-ImageTools"},{"location":"usage/#step-1-run-med-imagetools","text":"This step converts the DICOM files to NIfTIs, assigns unique SampleIDs to image and mask pairs, and generates an index table for each file with associated metadata (e.g. DICOM tags) pixi run mit NSCLC-Radiomics 'CT,RTSTRUCT' SEPARATE 'GTV:GTV-1,gtv-pre-op'","title":"Step 1: Run Med-ImageTools"},{"location":"usage/#step-2-generate-negative-control-images-with-readii","text":"This step creates and saves READII negative controls specified in the config file for the provided dataset. pixi run readii_negative NSCLC-Radiomics","title":"Step 2: Generate negative control images with READII"},{"location":"usage/#step-3-run-feature-extraction","text":"This step first generates an index file for the specific feature extraction method, where each row contains the information for the image and mask pair to use. pixi run extract NSCLC-Radiomics pyradiomics pyradiomics_original_all_features.yaml","title":"Step 3: Run feature extraction"},{"location":"usage/#data-splitting","text":"","title":"Data splitting"},{"location":"usage/#aerts_original","text":"Train: NSCLC-Radiomics Validation: HN1, RADCURE-test","title":"aerts_original"},{"location":"usage/#aerts_radcure_refit","text":"Train: RADCURE-train Validation: HN1, RADCURE-test","title":"aerts_RADCURE_refit"},{"location":"usage/#r2r_nsclc","text":"Train: NSCLC-Radiomics Validation: HN1, RADCURE-test","title":"r2r_NSCLC"},{"location":"usage/#r2r_radcure","text":"Train: RADCURE-train Validation: HN1, RADCURE-test","title":"r2r_RADCURE"},{"location":"usage/#survival-modelling","text":"","title":"Survival Modelling"},{"location":"usage/#resources","text":"https://scikit-survival.readthedocs.io/en/stable/user_guide/evaluating-survival-models.html# Harrell's C-index: https://scikit-survival.readthedocs.io/en/stable/api/generated/sksurv.metrics.concordance_index_censored.html","title":"Resources"},{"location":"devnotes/katy_notes/","text":"Developer Notes Data Processing Notes [2025-05-05] PyRadiomics original_all_features extraction tracking [2025-05-07] Updated with completed HN1 runs NC / Dataset CC-Radiomics-Phantom HEAD-NECK-RADIOMICS-HN1 NSCLC-Radiomics full original X X X full randomized X X X full sampled X X X full shuffled X X X non_roi randomized X X X non_roi sampled X X X non_roi shuffled X X X roi randomized X X X roi sampled X X X roi shuffled X X X [2025-05-12] Tracking extraction of all features for Aerts signature |Feature / Dataset | HEAD-NECK-RADIOMICS-HN1 | NSCLC-Radiomics | RADCURE | |original_firstorder_Energy | X | X | X | |original_shape_Compactness1 | X | X | X | |original_glrlm_GrayLevelNonUniformity | X | X | X | |wavelet-HLH_glrlm_GrayLevelNonUniformity | running | running | X | Bootstrapping help came from: https://acclab.github.io/bootstrap-confidence-intervals.html survcomp R package only works for linux and osx-64 tried the scikit-survival implementation of the concordance index with bootstrapping, but results don't match Mattea's exactly trying with R now [2025-05-13] Processing data for signature prediction models Since RADCURE was processed with old med-imagetools, manually set up mit_index from dataset.csv Change the column patient_ID to PatientID Add index column label SampleID |File / Dataset | HEAD-NECK-RADIOMICS-HN1 | NSCLC-Radiomics | RADCURE | | clinical | id | PatientID | patient_id | | mit index file | SampleID, PatientID | PatientID | SampleID, PatientID | | radiomics | ID == | ID | ID | HN1 - going to make a SampleID column in the mit2_index Rerunning all the MIT and feature extraction Manuscript Notes [2025-05-14] Manuscript Review Feedback Notes Introduction/Background Paragraph around biological/clinical application of radiomics (why do we do it?) Literature review for other quality control methods for radiomics Methods Add prediction of HPV status model Include section about saving out the negative control images Explain modular implementation of the negative controls such that users can construct their own Add ability to save out the changed mask from the contraction/expansion NCs Look for synonyms for transformation Intensity transformation? --> permutation? Sisira asked for an example of the RadiomicSet data to understand what it looks like Results Josh liked the new abstract figure more Get p-value calculation code from Caryn Save out bootstrap hazards so they don't get recalculated Keep the diagonal self-correlation plots, will go in supplemental Calculate and plot average correlations between clusters of features (shape vs. first order) Hierarchical clustering between the feature class clusters Correlation plot of the Aerts signature + volume features Compare distribution of correlation values in a line plot Line for each image type x-axis is the feature types, colourblock behind the plot for each imagetype Plot correlations with outcome before and after QC Plots Box plot of hazards for each image type and dataset to compare Project Repo Organization Notes [2025-05-14] data and workflow organization data | -- procdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/procdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- correlations | | -- features | | ` -- { extraction_method } | | ` -- { extraction_configuration_file_name } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ROI_name } | | | -- full_original_features.csv | | | -- { neg_control_region } _ { neg_control_permutation } _features.csv | | ` -- { neg_control_region } _ { neg_control_permutation } _features.csv | | -- images | | | -- mit_ { DATASET_NAME } | | | ` -- { PatientID } _ { SampleNumber } | | | | -- { ImageModality } _ { SeriesInstanceUID } | | | | ` -- { ImageModality } .nii.gz | | | ` -- { SegmentationModality } _ { SeriesInstanceUID } | | | ` -- { ROI_name } .nii.gz | | ` -- readii_ { DATASET_NAME } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ImageModality } _ { SeriesInstanceUID } | | | -- { neg_control_region } _ { neg_control_permutation } .nii.gz | | ` -- { neg_control_region } _ { neg_control_permutation } .nii.gz | ` -- signatures | ` -- { signature_name } | | -- full_original_signature_features.csv | ` -- { neg_control_region } _ { neg_control_permutation } _signature_features.csv | -- rawdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/srcdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- clinical | | ` -- { Clinical Data File } .csv OR { Clinical Data File } .xlsx | ` -- images | ` -- { DATASET_NAME } | | -- { Sample1 DICOM directory } | | -- { Sample2 DICOM directory } | | -- ... | ` -- { SampleN DICOM directory } ` -- results ` -- { DATASET_SOURCE } _ { DATASET_NAME } | -- correlation_figures | -- features | ` -- { extraction_method } | ` -- { extraction_configuration_file_name } ` -- signature_performance ` -- { signature_name } .csv | -- full_original_features.csv | -- { neg_control_region } _ { neg_control_permutation } _features.csv ` -- { neg_control_region } _ { neg_control_permutation } _features.csv workflow | -- notebooks ` -- scripts | -- analysis | | -- python | | ` -- predictive_signature_testing.py | ` -- r | | -- io.r | ` -- survival_prediction.r | -- feature_extraction | ` -- pyradiomics_index.py | -- orcestra | ` -- read_radiomicset.r | -- mit | ` -- run_autopipeline.sh ` -- readii ` -- run_readii.py [2025-05-22] MIT Snakemake and config updates wrote Snakemake script to run autopipeline for the dataset Updated the datasets/config file format and updated usage documentation. [2025=05-23] MIT Snakemake reorg + pyradiomics_index refactor Made smk file just for MIT rules, made run_MIT rule in main Snakefile pyradiomics_index --> index Added click CLI input Made a genral index function that calls the pyradiomics index function Want to add a dataset config variable or CLI argument that sets the method of feature extraction [2025-05-26] Index and run READII reorg, start of correlation coding katys/refactor-pyradiomics-index - has updated code for generating the index file for PyRadiomics using click for CLI katys/refactor-run_readii - has new file called make_negative_controls.py that just generates and saves the negative control images, no feature extraction * uses click * has function to get just the Image Type settings from the READII section of the config katys/add-correlation-calculation - copied the run_analysis.ipynb notebook from readii-fmcib * Started updating the config settings at the top of the file to hopefully run the correlation analysis and start generating figures All of these are waiting on readii 1.36.2 to be able to install from PyPI to work [2025-05-27] Debugging the overwrite issue with make_negative_controls Solved by using Series to get image metadata Also need to run alignImages whenever flattenImage is run so that origin, direction, and spacing are maintained -- made this an issue in READII as well [2025-05-28] Added make_negative_controls to Snakefile in run_readii rule Need to figure out how to list all the output files From Jermiah: https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#data-dependent-conditional-execution you would make the autopipeline rule a checkpoint then you can create an input function for another rule that parses the index file to generate all the files you want Trying to run it as is with full NSCLC-Radiomics dataset Plan for feature extraction refactor: Will generate an index for each image type - ID, Image, Mask Make Snakemake rule run per image type Feature extraction script will parallelize by patient [2025-05-29] Need to add MRI handling to make_negative_controls Changing how config MODALITIES is set up so that image and mask are separate [2025-06-04] Actually need the READII index earlier, for the negative control creation even Essentially making the edges file MIT used to make Need to generate ID for unique image-mask pair OR process all masks with a single image. The full would be the same for each of them Will end up with duplicates of the full mask for each mask - unless I rearrange the outputs data | -- procdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/procdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- images | | | -- mit_ { DATASET_NAME } | | | ` -- { PatientID } _ { SampleNumber } | | | | -- { ImageModality } _ { SeriesInstanceUID } | | | | ` -- { ImageModality } .nii.gz | | | ` -- { SegmentationModality } _ { SeriesInstanceUID } | | | ` -- { ROI_name } .nii.gz | | ` -- readii_ { DATASET_NAME } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ImageModality } _ { SeriesInstanceUID } | | | -- { SegmentationModality } _ { SeriesInstanceUID } | | | | -- { neg_control_permutation } _roi_.nii.gz | | | ` -- { neg_control_permutation } _non_roi_.nii.gz | | | -- full_ { neg_control_permutation } .nii.gz | | ` -- full_ { neg_control_permutation } .nii.gz This is what I want to end up with eventually, but for now am going to leave the full directories inside the segmentation file [2025-06-09] Could also see about making the roi region name the actual roi name That might make processing difficult though, since every ROI negative control image will have a different name [2025-06-10] So the NIFTIWriter has an index saver portion of it from Med-ImageTools Using that during negative control generation Just need to add the Mask paths to it [2025-06-16] Figured out how to use the NIFTIWriter the way I want Updated the values used for saving the negative control NIFTI's so index file has columns I can use like Med-ImageTools Should talk to Jermiah about making original image a READII filetype Updated generate_pyradiomics_index Currently set up to expect the original image index from med-imagetools always and can pass the readii index if available [2025-07-08] In sample_feature_writer, use a semi-colon to separate the keys and values of the feature vector so it can be read in easier by pandas With the comma, the pyradiomic settings lines confuse it. Could also transpose this and have the keys on line 1 and vals on line 2, not sure it would solve the problem [2025-07-09] Existing code already performed the transpose, just needed to change the comma to a semi-colon and fix the sortby value Extraction is working! Adding a tqdm progress bar then running CPTAC-CCRCC [2025-07-17] Merged rearranged workflow into main branch Pipeline can now be run with pixi tasks Snakemake needs to be updated and tested [2025-07-21] For NSCLC-Radiogenomics, R01-003 SEG file can be loaded by pydicom, but highdicom fails with an IntegrityError: image = dcmread ( \"TCIA_NSCLC-Radiogenomics/images/NSCLC-Radiogenomics/R01-003/12-09-1991-NA-CT_CHEST_WO-02622/1000.000000-3D_Slicer_segmentation_result-96510/1-1.dcm\" ) seg = hd . seg . Segmentation . from_dataset ( image ) ## ERROR MESSAGE File ~/ Documents / BHKLab_GitHub / readii_2_roqc /. pixi / envs / default / lib / python3 .12 / site - packages / highdicom / image . py : 4185 , in _Image . _create_ref_instance_table ( self , referenced_uids ) 4177 with self . _db_con : 4178 self . _db_con . execute ( 4179 \"CREATE TABLE InstanceUIDs(\" 4180 \"StudyInstanceUID VARCHAR NOT NULL, \" ( ... ) 4183 \")\" 4184 ) -> 4185 self . _db_con . executemany ( 4186 \"INSERT INTO InstanceUIDs \" 4187 \"(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) \" 4188 \"VALUES(?, ?, ?)\" , 4189 referenced_uids , 4190 ) IntegrityError : UNIQUE constraint failed : InstanceUIDs . SOPInstanceUID [2025-07-23] Got a followup on the above error: https://github.com/ImagingDataCommons/highdicom/issues/370 Added prediction functionality to the pipeline Train or test subsetting is specified when running pixi run predict - it will run the prediction on that subset of patients Will have to run once for train and once for test With the way I currently have it programmed, this is the best setup In a refactor, could make it so that train and test is run together and split, but it was too complicated and would duplicate too much code with the current setup Shabnam found a couple of bugs: If a MaskID has any spaces in it, the extractor breaks If one READII region is already extracted, need to specify overwrite to get any additional ones extracted","title":"Katy's Notes"},{"location":"devnotes/katy_notes/#developer-notes","text":"","title":"Developer Notes"},{"location":"devnotes/katy_notes/#data-processing-notes","text":"","title":"Data Processing Notes"},{"location":"devnotes/katy_notes/#2025-05-05-pyradiomics-original_all_features-extraction-tracking","text":"","title":"[2025-05-05] PyRadiomics original_all_features extraction tracking"},{"location":"devnotes/katy_notes/#2025-05-07-updated-with-completed-hn1-runs","text":"NC / Dataset CC-Radiomics-Phantom HEAD-NECK-RADIOMICS-HN1 NSCLC-Radiomics full original X X X full randomized X X X full sampled X X X full shuffled X X X non_roi randomized X X X non_roi sampled X X X non_roi shuffled X X X roi randomized X X X roi sampled X X X roi shuffled X X X","title":"[2025-05-07] Updated with completed HN1 runs"},{"location":"devnotes/katy_notes/#2025-05-12-tracking-extraction-of-all-features-for-aerts-signature","text":"|Feature / Dataset | HEAD-NECK-RADIOMICS-HN1 | NSCLC-Radiomics | RADCURE | |original_firstorder_Energy | X | X | X | |original_shape_Compactness1 | X | X | X | |original_glrlm_GrayLevelNonUniformity | X | X | X | |wavelet-HLH_glrlm_GrayLevelNonUniformity | running | running | X | Bootstrapping help came from: https://acclab.github.io/bootstrap-confidence-intervals.html survcomp R package only works for linux and osx-64 tried the scikit-survival implementation of the concordance index with bootstrapping, but results don't match Mattea's exactly trying with R now","title":"[2025-05-12] Tracking extraction of all features for Aerts signature"},{"location":"devnotes/katy_notes/#2025-05-13-processing-data-for-signature-prediction-models","text":"Since RADCURE was processed with old med-imagetools, manually set up mit_index from dataset.csv Change the column patient_ID to PatientID Add index column label SampleID |File / Dataset | HEAD-NECK-RADIOMICS-HN1 | NSCLC-Radiomics | RADCURE | | clinical | id | PatientID | patient_id | | mit index file | SampleID, PatientID | PatientID | SampleID, PatientID | | radiomics | ID == | ID | ID | HN1 - going to make a SampleID column in the mit2_index Rerunning all the MIT and feature extraction","title":"[2025-05-13] Processing data for signature prediction models"},{"location":"devnotes/katy_notes/#manuscript-notes","text":"","title":"Manuscript Notes"},{"location":"devnotes/katy_notes/#2025-05-14-manuscript-review-feedback-notes","text":"Introduction/Background Paragraph around biological/clinical application of radiomics (why do we do it?) Literature review for other quality control methods for radiomics Methods Add prediction of HPV status model Include section about saving out the negative control images Explain modular implementation of the negative controls such that users can construct their own Add ability to save out the changed mask from the contraction/expansion NCs Look for synonyms for transformation Intensity transformation? --> permutation? Sisira asked for an example of the RadiomicSet data to understand what it looks like Results Josh liked the new abstract figure more Get p-value calculation code from Caryn Save out bootstrap hazards so they don't get recalculated Keep the diagonal self-correlation plots, will go in supplemental Calculate and plot average correlations between clusters of features (shape vs. first order) Hierarchical clustering between the feature class clusters Correlation plot of the Aerts signature + volume features Compare distribution of correlation values in a line plot Line for each image type x-axis is the feature types, colourblock behind the plot for each imagetype Plot correlations with outcome before and after QC Plots Box plot of hazards for each image type and dataset to compare","title":"[2025-05-14] Manuscript Review Feedback Notes"},{"location":"devnotes/katy_notes/#project-repo-organization-notes","text":"","title":"Project Repo Organization Notes"},{"location":"devnotes/katy_notes/#2025-05-14-data-and-workflow-organization","text":"data | -- procdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/procdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- correlations | | -- features | | ` -- { extraction_method } | | ` -- { extraction_configuration_file_name } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ROI_name } | | | -- full_original_features.csv | | | -- { neg_control_region } _ { neg_control_permutation } _features.csv | | ` -- { neg_control_region } _ { neg_control_permutation } _features.csv | | -- images | | | -- mit_ { DATASET_NAME } | | | ` -- { PatientID } _ { SampleNumber } | | | | -- { ImageModality } _ { SeriesInstanceUID } | | | | ` -- { ImageModality } .nii.gz | | | ` -- { SegmentationModality } _ { SeriesInstanceUID } | | | ` -- { ROI_name } .nii.gz | | ` -- readii_ { DATASET_NAME } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ImageModality } _ { SeriesInstanceUID } | | | -- { neg_control_region } _ { neg_control_permutation } .nii.gz | | ` -- { neg_control_region } _ { neg_control_permutation } .nii.gz | ` -- signatures | ` -- { signature_name } | | -- full_original_signature_features.csv | ` -- { neg_control_region } _ { neg_control_permutation } _signature_features.csv | -- rawdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/srcdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- clinical | | ` -- { Clinical Data File } .csv OR { Clinical Data File } .xlsx | ` -- images | ` -- { DATASET_NAME } | | -- { Sample1 DICOM directory } | | -- { Sample2 DICOM directory } | | -- ... | ` -- { SampleN DICOM directory } ` -- results ` -- { DATASET_SOURCE } _ { DATASET_NAME } | -- correlation_figures | -- features | ` -- { extraction_method } | ` -- { extraction_configuration_file_name } ` -- signature_performance ` -- { signature_name } .csv | -- full_original_features.csv | -- { neg_control_region } _ { neg_control_permutation } _features.csv ` -- { neg_control_region } _ { neg_control_permutation } _features.csv workflow | -- notebooks ` -- scripts | -- analysis | | -- python | | ` -- predictive_signature_testing.py | ` -- r | | -- io.r | ` -- survival_prediction.r | -- feature_extraction | ` -- pyradiomics_index.py | -- orcestra | ` -- read_radiomicset.r | -- mit | ` -- run_autopipeline.sh ` -- readii ` -- run_readii.py","title":"[2025-05-14] data and workflow organization"},{"location":"devnotes/katy_notes/#2025-05-22-mit-snakemake-and-config-updates","text":"wrote Snakemake script to run autopipeline for the dataset Updated the datasets/config file format and updated usage documentation.","title":"[2025-05-22] MIT Snakemake and config updates"},{"location":"devnotes/katy_notes/#202505-23-mit-snakemake-reorg-pyradiomics_index-refactor","text":"Made smk file just for MIT rules, made run_MIT rule in main Snakefile pyradiomics_index --> index Added click CLI input Made a genral index function that calls the pyradiomics index function Want to add a dataset config variable or CLI argument that sets the method of feature extraction","title":"[2025=05-23] MIT Snakemake reorg + pyradiomics_index refactor"},{"location":"devnotes/katy_notes/#2025-05-26-index-and-run-readii-reorg-start-of-correlation-coding","text":"katys/refactor-pyradiomics-index - has updated code for generating the index file for PyRadiomics using click for CLI katys/refactor-run_readii - has new file called make_negative_controls.py that just generates and saves the negative control images, no feature extraction * uses click * has function to get just the Image Type settings from the READII section of the config katys/add-correlation-calculation - copied the run_analysis.ipynb notebook from readii-fmcib * Started updating the config settings at the top of the file to hopefully run the correlation analysis and start generating figures All of these are waiting on readii 1.36.2 to be able to install from PyPI to work","title":"[2025-05-26] Index and run READII reorg, start of correlation coding"},{"location":"devnotes/katy_notes/#2025-05-27","text":"Debugging the overwrite issue with make_negative_controls Solved by using Series to get image metadata Also need to run alignImages whenever flattenImage is run so that origin, direction, and spacing are maintained -- made this an issue in READII as well","title":"[2025-05-27]"},{"location":"devnotes/katy_notes/#2025-05-28","text":"Added make_negative_controls to Snakefile in run_readii rule Need to figure out how to list all the output files From Jermiah: https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html#data-dependent-conditional-execution you would make the autopipeline rule a checkpoint then you can create an input function for another rule that parses the index file to generate all the files you want Trying to run it as is with full NSCLC-Radiomics dataset Plan for feature extraction refactor: Will generate an index for each image type - ID, Image, Mask Make Snakemake rule run per image type Feature extraction script will parallelize by patient","title":"[2025-05-28]"},{"location":"devnotes/katy_notes/#2025-05-29","text":"Need to add MRI handling to make_negative_controls Changing how config MODALITIES is set up so that image and mask are separate","title":"[2025-05-29]"},{"location":"devnotes/katy_notes/#2025-06-04","text":"Actually need the READII index earlier, for the negative control creation even Essentially making the edges file MIT used to make Need to generate ID for unique image-mask pair OR process all masks with a single image. The full would be the same for each of them Will end up with duplicates of the full mask for each mask - unless I rearrange the outputs data | -- procdata | ` -- { DATASET_SOURCE } _ { DATASET_NAME } --> /path/to/separate/data/dir/procdata/ { DiseaseRegion } / { DATASET_SOURCE } _ { DATASET_NAME } | | -- images | | | -- mit_ { DATASET_NAME } | | | ` -- { PatientID } _ { SampleNumber } | | | | -- { ImageModality } _ { SeriesInstanceUID } | | | | ` -- { ImageModality } .nii.gz | | | ` -- { SegmentationModality } _ { SeriesInstanceUID } | | | ` -- { ROI_name } .nii.gz | | ` -- readii_ { DATASET_NAME } | | ` -- { PatientID } _ { SampleNumber } | | ` -- { ImageModality } _ { SeriesInstanceUID } | | | -- { SegmentationModality } _ { SeriesInstanceUID } | | | | -- { neg_control_permutation } _roi_.nii.gz | | | ` -- { neg_control_permutation } _non_roi_.nii.gz | | | -- full_ { neg_control_permutation } .nii.gz | | ` -- full_ { neg_control_permutation } .nii.gz This is what I want to end up with eventually, but for now am going to leave the full directories inside the segmentation file","title":"[2025-06-04]"},{"location":"devnotes/katy_notes/#2025-06-09","text":"Could also see about making the roi region name the actual roi name That might make processing difficult though, since every ROI negative control image will have a different name","title":"[2025-06-09]"},{"location":"devnotes/katy_notes/#2025-06-10","text":"So the NIFTIWriter has an index saver portion of it from Med-ImageTools Using that during negative control generation Just need to add the Mask paths to it","title":"[2025-06-10]"},{"location":"devnotes/katy_notes/#2025-06-16","text":"Figured out how to use the NIFTIWriter the way I want Updated the values used for saving the negative control NIFTI's so index file has columns I can use like Med-ImageTools Should talk to Jermiah about making original image a READII filetype Updated generate_pyradiomics_index Currently set up to expect the original image index from med-imagetools always and can pass the readii index if available","title":"[2025-06-16]"},{"location":"devnotes/katy_notes/#2025-07-08","text":"In sample_feature_writer, use a semi-colon to separate the keys and values of the feature vector so it can be read in easier by pandas With the comma, the pyradiomic settings lines confuse it. Could also transpose this and have the keys on line 1 and vals on line 2, not sure it would solve the problem","title":"[2025-07-08]"},{"location":"devnotes/katy_notes/#2025-07-09","text":"Existing code already performed the transpose, just needed to change the comma to a semi-colon and fix the sortby value Extraction is working! Adding a tqdm progress bar then running CPTAC-CCRCC","title":"[2025-07-09]"},{"location":"devnotes/katy_notes/#2025-07-17","text":"Merged rearranged workflow into main branch Pipeline can now be run with pixi tasks Snakemake needs to be updated and tested","title":"[2025-07-17]"},{"location":"devnotes/katy_notes/#2025-07-21","text":"For NSCLC-Radiogenomics, R01-003 SEG file can be loaded by pydicom, but highdicom fails with an IntegrityError: image = dcmread ( \"TCIA_NSCLC-Radiogenomics/images/NSCLC-Radiogenomics/R01-003/12-09-1991-NA-CT_CHEST_WO-02622/1000.000000-3D_Slicer_segmentation_result-96510/1-1.dcm\" ) seg = hd . seg . Segmentation . from_dataset ( image ) ## ERROR MESSAGE File ~/ Documents / BHKLab_GitHub / readii_2_roqc /. pixi / envs / default / lib / python3 .12 / site - packages / highdicom / image . py : 4185 , in _Image . _create_ref_instance_table ( self , referenced_uids ) 4177 with self . _db_con : 4178 self . _db_con . execute ( 4179 \"CREATE TABLE InstanceUIDs(\" 4180 \"StudyInstanceUID VARCHAR NOT NULL, \" ( ... ) 4183 \")\" 4184 ) -> 4185 self . _db_con . executemany ( 4186 \"INSERT INTO InstanceUIDs \" 4187 \"(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) \" 4188 \"VALUES(?, ?, ?)\" , 4189 referenced_uids , 4190 ) IntegrityError : UNIQUE constraint failed : InstanceUIDs . SOPInstanceUID","title":"[2025-07-21]"},{"location":"devnotes/katy_notes/#2025-07-23","text":"Got a followup on the above error: https://github.com/ImagingDataCommons/highdicom/issues/370 Added prediction functionality to the pipeline Train or test subsetting is specified when running pixi run predict - it will run the prediction on that subset of patients Will have to run once for train and once for test With the way I currently have it programmed, this is the best setup In a refactor, could make it so that train and test is run together and split, but it was too complicated and would duplicate too much code with the current setup Shabnam found a couple of bugs: If a MaskID has any spaces in it, the extractor breaks If one READII region is already extracted, need to specify overwrite to get any additional ones extracted","title":"[2025-07-23]"},{"location":"devnotes/shabnam_notes/","text":"Developer Notes [2025-05-20] Tracking extraction of all features for Aerts signature From Katy's notes : Feature / Dataset HEAD-NECK-RADIOMICS-HN1 NSCLC-Radiomics RADCURE original_firstorder_Energy X X X original_shape_Compactness1 X X X original_glrlm_GrayLevelNonUniformity X X X wavelet-HLH_glrlm_GrayLevelNonUniformity running running X I think the paths in the run readii should be passed in a config file since I can't run two datasets at the same time.","title":"Shabnam's Notes"},{"location":"devnotes/shabnam_notes/#developer-notes","text":"","title":"Developer Notes"},{"location":"devnotes/shabnam_notes/#2025-05-20-tracking-extraction-of-all-features-for-aerts-signature","text":"From Katy's notes : Feature / Dataset HEAD-NECK-RADIOMICS-HN1 NSCLC-Radiomics RADCURE original_firstorder_Energy X X X original_shape_Compactness1 X X X original_glrlm_GrayLevelNonUniformity X X X wavelet-HLH_glrlm_GrayLevelNonUniformity running running X I think the paths in the run readii should be passed in a config file since I can't run two datasets at the same time.","title":"[2025-05-20] Tracking extraction of all features for Aerts signature"}]}